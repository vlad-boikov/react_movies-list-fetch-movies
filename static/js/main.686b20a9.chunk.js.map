{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","query","setQuery","setMovie","isLoading","setIsLoading","isError","setError","loadMovie","fetch","then","res","json","catch","Response","Error","getMovie","result","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","placeholder","value","onChange","e","target","classNames","disabled","onClick","preventDefault","App","setMovies","find","film","ReactDOM","render","document","getElementById"],"mappings":"8TAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,SAAgDD,EAAMK,aAI1D,sBAAKJ,UAAU,UAAU,UAAQ,mBAAjC,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAS,UAAQ,WAAhC,4BC3BKC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,c,0BCHNC,EAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAuB,MAAjD,mBAAOf,EAAP,KAAckB,EAAd,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAA4BL,oBAAS,GAArC,mBAAOM,EAAP,KAAgBC,EAAhB,KAQMC,EAAY,WAChBH,GAAa,GCnBV,SAAkBJ,GACvB,OAAOQ,MAAM,GAAD,OAHE,2CAGF,cAAiBR,IAC1BS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,uBDgBTC,CAASf,GACNS,MAAK,SAAAO,GACJ,GAAI,UAAWA,EAAQ,CACrB,IACEC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,KACAC,EAEEH,EAFFG,OACAC,EACEJ,EADFI,OAGFlB,EAAS,CACPb,MAAO4B,EACP3B,YAAa4B,EACb/B,OAAmB,QAAXgC,EACJ,4DACAA,EACJ3B,QAAQ,8BAAD,OAAgC4B,GACvCxB,OAAQwB,SAGVd,GAAS,MAGZe,SAAQ,kBAAMjB,GAAa,OAGhC,OACE,qCACE,uBAAMnB,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQqC,QAAQ,cAAjC,yBAIA,qBAAKrC,UAAU,UAAf,SACE,uBACE,UAAQ,aACRsC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZxC,UAAU,kBACVyC,MAAO1B,EACP2B,SAAU,SAAAC,GACR3B,EAAS2B,EAAEC,OAAOH,OAClBpB,GAAS,QAKdD,GACC,mBAAGpB,UAAU,iBAAiB,UAAQ,eAAtC,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE,UAAQ,eACRsC,KAAK,SACLtC,UAAW6C,IACT,kBAAmB,CAAE,aAAc3B,IAErC4B,UAAW/B,EACXgC,QAAS,SAAAJ,GACPA,EAAEK,iBACF1B,KATJ,SAYIvB,EAA4B,eAAnB,qBAIZA,GACD,qBAAKC,UAAU,UAAf,SACE,wBACE,UAAQ,YACRsC,KAAK,SACLtC,UAAU,oBACV+C,QAzFU,WACtBlC,EAASd,GACTkB,EAAS,MACTD,EAAS,KAkFC,uCAaLjB,GACD,sBAAKC,UAAU,YAAY,UAAQ,mBAAnC,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOA,WEhHfkD,EAAM,WACjB,MAA4BnC,mBAAkB,IAA9C,mBAAOL,EAAP,KAAeyC,EAAf,KAUA,OACE,sBAAKlD,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAGtB,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CACEa,SAhBS,SAACd,GACXA,IAASU,EAAO0C,MAAK,SAAAC,GAAI,OAAIA,EAAKzC,SAAWZ,EAAMY,WAIxDuC,EAAU,GAAD,mBAAKzC,GAAL,CAAaV,cCV1BsD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.686b20a9.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  addMovie: (movie: Movie | null) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setError] = useState(false);\n\n  const addMovieHandler = () => {\n    addMovie(movie);\n    setMovie(null);\n    setQuery('');\n  };\n\n  const loadMovie = () => {\n    setIsLoading(true);\n\n    getMovie(query)\n      .then(result => {\n        if ('Title' in result) {\n          const {\n            Title,\n            Plot,\n            Poster,\n            imdbID,\n          } = result;\n\n          setMovie({\n            title: Title,\n            description: Plot,\n            imgUrl: Poster === 'N/A'\n              ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n              : Poster,\n            imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n            imdbId: imdbID,\n          });\n        } else {\n          setError(true);\n        }\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={e => {\n                setQuery(e.target.value);\n                setError(false);\n              }}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light', { 'is-loading': isLoading },\n              )}\n              disabled={!query}\n              onClick={e => {\n                e.preventDefault();\n                loadMovie();\n              }}\n            >\n              {!movie ? ('Find a movie') : ('Search again')}\n            </button>\n          </div>\n\n          {!!movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addMovieHandler}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {!!movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=3396cea1';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie | null) => {\n    if (!movie || movies.find(film => film.imdbId === movie.imdbId)) {\n      return;\n    }\n\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}